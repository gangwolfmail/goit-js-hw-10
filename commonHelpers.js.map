{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nconst startButton = document.querySelector('button');\nconst inputData = document.querySelector('input#datetime-picker');\nconst daysData = document.querySelector('[data-days]');\nconst hoursData = document.querySelector('[data-hours]');\nconst minutesData = document.querySelector('[data-minutes]');\nconst secondsData = document.querySelector('[data-seconds]');\nconst timer = document.querySelector('.timer');\n\nlet userSelectedDate;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate < Date.now()) {\n      iziToast.error({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n    }\n  },\n};\n\nlet countdownInterval;\n\nfunction startTimer() {\n  countdownInterval = setInterval(updateTimer, 1000, userSelectedDate);\n}\n\nfunction updateTimer(endDate) {\n  const currentDate = new Date();\n  const remainingTime = endDate - currentDate;\n  const { days, hours, minutes, seconds } = convertMs(remainingTime);\n\n  if (!isNaN(days) && !isNaN(hours) && !isNaN(minutes) && !isNaN(seconds)) {\n    daysData.textContent = addLeadingZero(days);\n    hoursData.textContent = addLeadingZero(hours);\n    minutesData.textContent = addLeadingZero(minutes);\n    secondsData.textContent = addLeadingZero(seconds);\n  }\n\n  if (remainingTime <= 0) {\n    stopTimer();\n  }\n}\n\nstartButton.addEventListener('click', () => {\n  if (userSelectedDate) {\n    startTimer();\n  }\n});\n\nfunction stopTimer() {\n  if (countdownInterval) {\n    clearInterval(countdownInterval);\n\n    daysData.textContent = '00';\n    hoursData.textContent = '00';\n    minutesData.textContent = '00';\n    secondsData.textContent = '00';\n\n    countdownInterval = null;\n  }\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nflatpickr(inputData, options);\n\n// import flatpickr from 'flatpickr';\n// import iziToast from 'izitoast';\n\n// const dataTimePicker = document.getElementById('datetime-picker');\n// const startBtn = document.querySelector('[data-start]'),\n//   dataDays = document.querySelector('span[data-days]'),\n//   dataHours = document.querySelector('span[data-hours]'),\n//   dataMinutes = document.querySelector('span[data-minutes]'),\n//   dataSeconds = document.querySelector('span[data-seconds]');\n\n// let userSelectedDate;\n\n// disableBtn();\n\n// const options = {\n//   enableTime: true,\n//   time_24hr: true,\n//   defaultDate: new Date(),\n//   minuteIncrement: 1,\n//   onClose(selectedDates) {\n//     if (selectedDates[0] > new Date()) {\n//       userSelectedDate = selectedDates[0];\n//       activeBtn();\n//       iziToast.show({\n//         icon: 'icon-true',\n//         backgroundColor: '#82C43C',\n//         message: 'You can start the countdown',\n//         messageColor: '#FAFAFB',\n//         messageSize: '16px',\n//         position: 'topRight',\n//         close: false,\n//       });\n//     } else {\n//       iziToast.show({\n//         icon: 'icon-false',\n//         backgroundColor: '#EF4040',\n//         message: 'Please choose a date in the future',\n//         messageColor: '#FFBEBE',\n//         messageSize: '16px',\n//         position: 'topRight',\n//         close: false,\n//       });\n//       disableBtn();\n//     }\n//   },\n// };\n\n// startBtn.addEventListener('click', event => {\n//   event.preventDefault();\n\n//   const backReferenceTimer = setInterval(() => {\n//     disableBtn();\n//     const backReference = userSelectedDate - Date.now();\n//     const convertDate = convertMs(backReference);\n//     if (backReference > 0) {\n//       dataDays.textContent = addLeadingZero(convertDate.days);\n//       dataHours.textContent = addLeadingZero(convertDate.hours);\n//       dataMinutes.textContent = addLeadingZero(convertDate.minutes);\n//       dataSeconds.textContent = addLeadingZero(convertDate.seconds);\n//     } else {\n//       clearInterval(backReferenceTimer);\n//       iziToast.show({\n//         icon: 'icon-true',\n//         backgroundColor: '#82C43C',\n//         message: 'Date came, timer  has stopped',\n//         messageColor: '#FAFAFB',\n//         messageSize: '16px',\n//         position: 'topRight',\n//         close: false,\n//       });\n//     }\n//   }, 1000);\n// });\n\n// function disableBtn() {\n//   startBtn.disabled = true;\n//   startBtn.style.background = '#cfcfcf';\n//   startBtn.style.color = '#989898';\n// }\n\n// function activeBtn() {\n//   startBtn.disabled = false;\n//   startBtn.style.background = '#4e75ff';\n//   startBtn.style.color = '#fff';\n// }\n\n// function convertMs(ms) {\n//   // Number of milliseconds per unit of time\n//   const second = 1000;\n//   const minute = second * 60;\n//   const hour = minute * 60;\n//   const day = hour * 24;\n\n//   // Remaining days\n//   const days = Math.floor(ms / day);\n//   // Remaining hours\n//   const hours = Math.floor((ms % day) / hour);\n//   // Remaining minutes\n//   const minutes = Math.floor(((ms % day) % hour) / minute);\n//   // Remaining seconds\n//   const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n//   return { days, hours, minutes, seconds };\n// }\n\n// function addLeadingZero(value) {\n//   return String(value).padStart(2, '0');\n// }\n\n// flatpickr(dataTimePicker, options);\n\n// import flatpickr from 'flatpickr';\n// import iziToast from 'izitoast';\n// import 'izitoast/dist/css/iziToast.min.css';\n// import 'flatpickr/dist/flatpickr.min.css';\n\n// const startButton = document.querySelector('button');\n// const inputData = document.querySelector('input#datetime-picker');\n// const daysData = document.querySelector('[data-days]');\n// const hoursData = document.querySelector('[data-hours]');\n// const minutesData = document.querySelector('[data-minutes]');\n// const secondsData = document.querySelector('[data-seconds]');\n// const timer = document.querySelector('.timer');\n\n// let userSelectedDate;\n\n// const options = {\n//   enableTime: true,\n//   time_24hr: true,\n//   defaultDate: new Date(),\n//   minuteIncrement: 1,\n//   onClose(selectedDates) {\n//     userSelectedDate = selectedDates[0];\n//     if (userSelectedDate < Date.now()) {\n//       iziToast.error({\n//         message: 'Please choose a date in the future',\n//         position: 'topRight',\n//       });\n//       startButton.disabled = true;\n//     } else {\n//       startButton.disabled = false;\n//     }\n//   },\n// };\n\n// let countdownInterval;\n\n// function startTimer() {\n//   countdownInterval = setInterval(updateTimer, 1000, userSelectedDate);\n// }\n\n// function updateTimer(endDate) {\n//   const currentDate = new Date();\n//   const remainingTime = endDate - currentDate;\n//   const { days, hours, minutes, seconds } = convertMs(remainingTime);\n\n//   if (!isNaN(days) && !isNaN(hours) && !isNaN(minutes) && !isNaN(seconds)) {\n//     daysData.textContent = addLeadingZero(days);\n//     hoursData.textContent = addLeadingZero(hours);\n//     minutesData.textContent = addLeadingZero(minutes);\n//     secondsData.textContent = addLeadingZero(seconds);\n//   }\n\n//   if (remainingTime <= 0) {\n//     stopTimer();\n//   }\n// }\n\n// startButton.addEventListener('click', () => {\n//   if (userSelectedDate) {\n//     startTimer();\n//   }\n// });\n\n// function stopTimer() {\n//   if (countdownInterval) {\n//     clearInterval(countdownInterval);\n\n//     daysData.textContent = '00';\n//     hoursData.textContent = '00';\n//     minutesData.textContent = '00';\n//     secondsData.textContent = '00';\n\n//     countdownInterval = null;\n//   }\n// }\n\n// function addLeadingZero(value) {\n//   return String(value).padStart(2, '0');\n// }\n\n// function convertMs(ms) {\n//   const second = 1000;\n//   const minute = second * 60;\n//   const hour = minute * 60;\n//   const day = hour * 24;\n\n//   const days = Math.floor(ms / day);\n//   const hours = Math.floor((ms % day) / hour);\n//   const minutes = Math.floor(((ms % day) % hour) / minute);\n//   const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n//   return { days, hours, minutes, seconds };\n// }\n\n// flatpickr(inputData, options);\n\n// *==========================\n\n// import flatpickr from 'flatpickr';\n// import iziToast from 'izitoast';\n\n// const dataTimePicker = document.getElementById('datetime-picker');\n// const startBtn = document.querySelector('[data-start]'),\n//   dataDays = document.querySelector('span[data-days]'),\n//   dataHours = document.querySelector('span[data-hours]'),\n//   dataMinutes = document.querySelector('span[data-minutes]'),\n//   dataSeconds = document.querySelector('span[data-seconds]');\n\n// let userSelectedDate;\n\n// toggleButton(false);\n\n// const options = {\n//   enableTime: true,\n//   time_24hr: true,\n//   defaultDate: new Date(),\n//   minuteIncrement: 1,\n//   onClose(selectedDates) {\n//     const currentDate = new Date();\n//     if (selectedDates[0] > currentDate) {\n//       userSelectedDate = selectedDates[0];\n//       toggleButton(true);\n//       iziToast.info({\n//         message: 'You can start the countdown',\n//         position: 'topRight',\n//       });\n//     } else {\n//       iziToast.error({\n//         message: 'Please choose a date in the future',\n//         position: 'topRight',\n//       });\n//       toggleButton(false);\n//     }\n//   },\n// };\n\n// flatpickr(dataTimePicker, options);\n\n// startBtn.addEventListener('click', event => {\n//   event.preventDefault();\n//   if (!userSelectedDate || userSelectedDate <= new Date()) {\n//     iziToast.error({\n//       message: 'Please choose a date in the future',\n//       position: 'topRight',\n//     });\n//     return;\n//   }\n\n//   toggleButton(false);\n//   const backReferenceTimer = setInterval(() => {\n//     const timeDifference = userSelectedDate - new Date();\n//     if (timeDifference > 0) {\n//       const timeParts = convertMs(timeDifference);\n//       dataDays.textContent = addLeadingZero(timeParts.days);\n//       dataHours.textContent = addLeadingZero(timeParts.hours);\n//       dataMinutes.textContent = addLeadingZero(timeParts.minutes);\n//       dataSeconds.textContent = addLeadingZero(timeParts.seconds);\n//     } else {\n//       clearInterval(backReferenceTimer);\n//       iziToast.info({\n//         message: 'The time has come',\n//         position: 'topRight',\n//       });\n//     }\n//   }, 1000);\n// });\n\n// function toggleButton(enabled) {\n//   startBtn.disabled = !enabled;\n//   startBtn.classList.toggle('button-active', enabled);\n//   startBtn.classList.toggle('button-disabled', !enabled);\n// }\n\n// function convertMs(ms) {\n//   const second = 1000;\n//   const minute = second * 60;\n//   const hour = minute * 60;\n//   const day = hour * 24;\n\n//   const days = Math.floor(ms / day);\n//   const hours = Math.floor((ms % day) / hour);\n//   const minutes = Math.floor((ms % hour) / minute);\n//   const seconds = Math.floor((ms % minute) / second);\n\n//   return { days, hours, minutes, seconds };\n// }\n\n// function addLeadingZero(value) {\n//   return String(value).padStart(2, '0');\n// }\n\n// * ==========\n// import flatpickr from 'flatpickr';\n// import iziToast from 'izitoast';\n// import 'izitoast/dist/css/iziToast.min.css';\n// import 'flatpickr/dist/flatpickr.min.css';\n\n// const dataTimePicker = document.getElementById('datetime-picker');\n// const startBtn = document.querySelector('[data-start]');\n// const dataDays = document.querySelector('[data-days]');\n// const dataHours = document.querySelector('[data-hours]');\n// const dataMinutes = document.querySelector('[data-minutes]');\n// const dataSeconds = document.querySelector('[data-seconds]');\n\n// let userSelectedDate;\n// let countdownInterval;\n\n// function toggleButton(enabled) {\n//   startBtn.disabled = !enabled;\n//   startBtn.classList.toggle('button-active', enabled);\n//   startBtn.classList.toggle('button-disabled', !enabled);\n// }\n\n// toggleButton(false);\n\n// const options = {\n//   enableTime: true,\n//   time_24hr: true,\n//   defaultDate: new Date(),\n//   minuteIncrement: 1,\n//   onClose(selectedDates) {\n//     const currentDate = new Date();\n//     if (selectedDates[0] > currentDate) {\n//       userSelectedDate = selectedDates[0];\n//       toggleButton(true);\n//       iziToast.info({\n//         message: 'You can start the countdown',\n//         position: 'topRight',\n//       });\n//     } else {\n//       iziToast.error({\n//         message: 'Please choose a date in the future',\n//         position: 'topRight',\n//       });\n//       toggleButton(false);\n//     }\n//   },\n// };\n\n// flatpickr(dataTimePicker, options);\n\n// startBtn.addEventListener('click', event => {\n//   event.preventDefault();\n//   if (!userSelectedDate || userSelectedDate <= new Date()) {\n//     iziToast.error({\n//       message: 'Please choose a date in the future',\n//       position: 'topRight',\n//     });\n//     return;\n//   }\n\n//   toggleButton(false);\n//   countdownInterval = setInterval(updateTimer, 1000);\n// });\n\n// function updateTimer() {\n//   const timeDifference = userSelectedDate - new Date();\n//   if (timeDifference > 0) {\n//     const timeParts = convertMs(timeDifference);\n//     dataDays.textContent = addLeadingZero(timeParts.days);\n//     dataHours.textContent = addLeadingZero(timeParts.hours);\n//     dataMinutes.textContent = addLeadingZero(timeParts.minutes);\n//     dataSeconds.textContent = addLeadingZero(timeParts.seconds);\n//   } else {\n//     clearInterval(countdownInterval);\n//     iziToast.info({\n//       message: 'The time has gone',\n//       position: 'topRight',\n//     });\n//     toggleButton(false);\n//   }\n// }\n\n// function convertMs(ms) {\n//   const second = 1000;\n//   const minute = second * 60;\n//   const hour = minute * 60;\n//   const day = hour * 24;\n\n//   const days = Math.floor(ms / day);\n//   const hours = Math.floor((ms % day) / hour);\n//   const minutes = Math.floor((ms % hour) / minute);\n//   const seconds = Math.floor((ms % minute) / second);\n\n//   return { days, hours, minutes, seconds };\n// }\n\n// function addLeadingZero(value) {\n//   return String(value).padStart(2, '0');\n// }\n"],"names":["startButton","inputData","daysData","hoursData","minutesData","secondsData","userSelectedDate","options","selectedDates","iziToast","countdownInterval","startTimer","updateTimer","endDate","remainingTime","days","hours","minutes","seconds","convertMs","addLeadingZero","stopTimer","value","ms","flatpickr"],"mappings":"gJAKA,MAAMA,EAAc,SAAS,cAAc,QAAQ,EAC7CC,EAAY,SAAS,cAAc,uBAAuB,EAC1DC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAC7C,SAAS,cAAc,QAAQ,EAE7C,IAAIC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAC9BF,EAAmB,KAAK,OAC1BG,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,UAClB,CAAO,EACDT,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE1B,CACH,EAEA,IAAIU,EAEJ,SAASC,GAAa,CACpBD,EAAoB,YAAYE,EAAa,IAAMN,CAAgB,CACrE,CAEA,SAASM,EAAYC,EAAS,CAE5B,MAAMC,EAAgBD,EADF,IAAI,KAElB,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAa,EAE7D,CAAC,MAAMC,CAAI,GAAK,CAAC,MAAMC,CAAK,GAAK,CAAC,MAAMC,CAAO,GAAK,CAAC,MAAMC,CAAO,IACpEhB,EAAS,YAAckB,EAAeL,CAAI,EAC1CZ,EAAU,YAAciB,EAAeJ,CAAK,EAC5CZ,EAAY,YAAcgB,EAAeH,CAAO,EAChDZ,EAAY,YAAce,EAAeF,CAAO,GAG9CJ,GAAiB,GACnBO,GAEJ,CAEArB,EAAY,iBAAiB,QAAS,IAAM,CACtCM,GACFK,GAEJ,CAAC,EAED,SAASU,GAAY,CACfX,IACF,cAAcA,CAAiB,EAE/BR,EAAS,YAAc,KACvBC,EAAU,YAAc,KACxBC,EAAY,YAAc,KAC1BC,EAAY,YAAc,KAE1BK,EAAoB,KAExB,CAEA,SAASU,EAAeE,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASH,EAAUI,EAAI,CAMrB,MAAMR,EAAO,KAAK,MAAMQ,EAAK,KAAG,EAC1BP,EAAQ,KAAK,MAAOO,EAAK,MAAO,IAAI,EACpCN,EAAU,KAAK,MAAQM,EAAK,MAAO,KAAQ,GAAM,EACjDL,EAAU,KAAK,MAASK,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAR,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEAM,EAAUvB,EAAWM,CAAO"}