{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\n\nconst dataTimePicker = document.getElementById('datetime-picker');\nconst startBtn = document.querySelector('[data-start]'),\n  dataDays = document.querySelector('span[data-days]'),\n  dataHours = document.querySelector('span[data-hours]'),\n  dataMinutes = document.querySelector('span[data-minutes]'),\n  dataSeconds = document.querySelector('span[data-seconds]');\n\nlet userSelectedDate;\n\ndisableBtn();\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] > new Date()) {\n      userSelectedDate = selectedDates[0];\n      activeBtn();\n      iziToast.show({\n        icon: 'icon-true',\n        backgroundColor: '#82C43C',\n        message: 'You can start the countdown',\n        messageColor: '#FAFAFB',\n        messageSize: '16px',\n        position: 'topCenter',\n        close: false,\n      });\n    } else {\n      iziToast.show({\n        icon: 'icon-false',\n        backgroundColor: '#EF4040',\n        message: 'Please choose a date in the future',\n        messageColor: '#FFBEBE',\n        messageSize: '16px',\n        position: 'topCenter',\n        close: false,\n      });\n      disableBtn();\n    }\n  },\n};\n\nstartBtn.addEventListener('click', event => {\n  event.preventDefault();\n\n  const backReferenceTimer = setInterval(() => {\n    disableBtn();\n    const backReference = userSelectedDate - Date.now();\n    const convertDate = convertMs(backReference);\n    if (backReference > 0) {\n      dataDays.textContent = addLeadingZero(convertDate.days);\n      dataHours.textContent = addLeadingZero(convertDate.hours);\n      dataMinutes.textContent = addLeadingZero(convertDate.minutes);\n      dataSeconds.textContent = addLeadingZero(convertDate.seconds);\n    } else {\n      clearInterval(backReferenceTimer);\n      iziToast.show({\n        icon: 'icon-true',\n        backgroundColor: '#82C43C',\n        message: 'Date came, timer  has stopped',\n        messageColor: '#FAFAFB',\n        messageSize: '16px',\n        position: 'topCenter',\n        close: false,\n      });\n    }\n  }, 1000);\n});\n\nfunction disableBtn() {\n  startBtn.disable = true;\n  startBtn.style.background = '#cfcfcf';\n  startBtn.style.color = '#989898';\n}\n\nfunction activeBtn() {\n  startBtn.disable = false;\n  startBtn.style.background = '#4e75ff';\n  startBtn.style.color = '#fff';\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nflatpickr(dataTimePicker, options);\n\n// import flatpickr from 'flatpickr';\n// import iziToast from 'izitoast';\n// import 'izitoast/dist/css/iziToast.min.css';\n// import 'flatpickr/dist/flatpickr.min.css';\n\n// const startButton = document.querySelector('button');\n// const inputData = document.querySelector('input#datetime-picker');\n// const daysData = document.querySelector('[data-days]');\n// const hoursData = document.querySelector('[data-hours]');\n// const minutesData = document.querySelector('[data-minutes]');\n// const secondsData = document.querySelector('[data-seconds]');\n// const timer = document.querySelector('.timer');\n\n// let userSelectedDate;\n\n// const options = {\n//   enableTime: true,\n//   time_24hr: true,\n//   defaultDate: new Date(),\n//   minuteIncrement: 1,\n//   onClose(selectedDates) {\n//     userSelectedDate = selectedDates[0];\n//     if (userSelectedDate < Date.now()) {\n//       iziToast.error({\n//         message: 'Please choose a date in the future',\n//         position: 'topRight',\n//       });\n//       startButton.disabled = true;\n//     } else {\n//       startButton.disabled = false;\n//     }\n//   },\n// };\n\n// let countdownInterval;\n\n// function startTimer() {\n//   countdownInterval = setInterval(updateTimer, 1000, userSelectedDate);\n// }\n\n// function updateTimer(endDate) {\n//   const currentDate = new Date();\n//   const remainingTime = endDate - currentDate;\n//   const { days, hours, minutes, seconds } = convertMs(remainingTime);\n\n//   if (!isNaN(days) && !isNaN(hours) && !isNaN(minutes) && !isNaN(seconds)) {\n//     daysData.textContent = addLeadingZero(days);\n//     hoursData.textContent = addLeadingZero(hours);\n//     minutesData.textContent = addLeadingZero(minutes);\n//     secondsData.textContent = addLeadingZero(seconds);\n//   }\n\n//   if (remainingTime <= 0) {\n//     stopTimer();\n//   }\n// }\n\n// startButton.addEventListener('click', () => {\n//   if (userSelectedDate) {\n//     startTimer();\n//   }\n// });\n\n// function stopTimer() {\n//   if (countdownInterval) {\n//     clearInterval(countdownInterval);\n\n//     daysData.textContent = '00';\n//     hoursData.textContent = '00';\n//     minutesData.textContent = '00';\n//     secondsData.textContent = '00';\n\n//     countdownInterval = null;\n//   }\n// }\n\n// function addLeadingZero(value) {\n//   return String(value).padStart(2, '0');\n// }\n\n// function convertMs(ms) {\n//   const second = 1000;\n//   const minute = second * 60;\n//   const hour = minute * 60;\n//   const day = hour * 24;\n\n//   const days = Math.floor(ms / day);\n//   const hours = Math.floor((ms % day) / hour);\n//   const minutes = Math.floor(((ms % day) % hour) / minute);\n//   const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n//   return { days, hours, minutes, seconds };\n// }\n\n// flatpickr(inputData, options);\n"],"names":["dataTimePicker","startBtn","dataDays","dataHours","dataMinutes","dataSeconds","userSelectedDate","disableBtn","options","selectedDates","activeBtn","iziToast","event","backReferenceTimer","backReference","convertDate","convertMs","addLeadingZero","ms","days","hours","minutes","seconds","value","flatpickr"],"mappings":"2IAGA,MAAMA,EAAiB,SAAS,eAAe,iBAAiB,EAC1DC,EAAW,SAAS,cAAc,cAAc,EACpDC,EAAW,SAAS,cAAc,iBAAiB,EACnDC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAc,SAAS,cAAc,oBAAoB,EAE3D,IAAIC,EAEJC,IAEA,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,EAAI,IAAI,MACzBH,EAAmBG,EAAc,CAAC,EAClCC,IACAC,EAAS,KAAK,CACZ,KAAM,YACN,gBAAiB,UACjB,QAAS,8BACT,aAAc,UACd,YAAa,OACb,SAAU,YACV,MAAO,EACf,CAAO,IAEDA,EAAS,KAAK,CACZ,KAAM,aACN,gBAAiB,UACjB,QAAS,qCACT,aAAc,UACd,YAAa,OACb,SAAU,YACV,MAAO,EACf,CAAO,EACDJ,IAEH,CACH,EAEAN,EAAS,iBAAiB,QAASW,GAAS,CAC1CA,EAAM,eAAc,EAEpB,MAAMC,EAAqB,YAAY,IAAM,CAC3CN,IACA,MAAMO,EAAgBR,EAAmB,KAAK,IAAG,EAC3CS,EAAcC,EAAUF,CAAa,EACvCA,EAAgB,GAClBZ,EAAS,YAAce,EAAeF,EAAY,IAAI,EACtDZ,EAAU,YAAcc,EAAeF,EAAY,KAAK,EACxDX,EAAY,YAAca,EAAeF,EAAY,OAAO,EAC5DV,EAAY,YAAcY,EAAeF,EAAY,OAAO,IAE5D,cAAcF,CAAkB,EAChCF,EAAS,KAAK,CACZ,KAAM,YACN,gBAAiB,UACjB,QAAS,gCACT,aAAc,UACd,YAAa,OACb,SAAU,YACV,MAAO,EACf,CAAO,EAEJ,EAAE,GAAI,CACT,CAAC,EAED,SAASJ,GAAa,CACpBN,EAAS,QAAU,GACnBA,EAAS,MAAM,WAAa,UAC5BA,EAAS,MAAM,MAAQ,SACzB,CAEA,SAASS,GAAY,CACnBT,EAAS,QAAU,GACnBA,EAAS,MAAM,WAAa,UAC5BA,EAAS,MAAM,MAAQ,MACzB,CAEA,SAASe,EAAUE,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASL,EAAeM,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEAC,EAAUxB,EAAgBQ,CAAO"}