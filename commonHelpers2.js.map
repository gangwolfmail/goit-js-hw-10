{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from 'izitoast';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const time = form.elements.delay.value;\n  const state = form.elements.state.value;\n\n  // if (time < 0) {\n  //   iziToast.show({\n  //     icon: 'icon-false',\n  //     backgroundColor: '#FC5A5A',\n  //     message: `Delay cannot be negative`,\n  //     messageColor: '#FAFAFB',\n  //     messageSize: '16px',\n  //     position: 'topCenter',\n  //     close: false,\n  //     closeOnClick: true,\n  //   });\n  //   return;\n  // }\n\n  function promise() {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (state === 'fulfilled') {\n          resolve();\n        }\n        reject();\n      }, time);\n    });\n  }\n\n  promise()\n    .then(value => successfulMessage(time))\n    .catch(error => errorMessage(time));\n});\n\nfunction errorMessage(delay) {\n  iziToast.show({\n    icon: 'icon-false',\n    backgroundColor: '#FC5A5A',\n    message: `Rejected promise in ${delay} ms`,\n    messageColor: '#FAFAFB',\n    messageSize: '16px',\n    position: 'topCenter',\n    close: false,\n  });\n}\n\nfunction successfulMessage(delay) {\n  iziToast.show({\n    icon: 'icon-false',\n    backgroundColor: '#82C43C',\n    message: `Fulfilled promise in ${delay} ms`,\n    messageColor: '#FAFAFB',\n    messageSize: '16px',\n    position: 'topCenter',\n    close: false,\n  });\n}\n// import iziToast from 'izitoast';\n// import 'izitoast/dist/css/iziToast.min.css';\n\n// const form = document.querySelector('.form');\n\n// function createPromise(event) {\n//   event.preventDefault();\n//   const delay = form.delay.value;\n//   const state = form.state.value;\n\n//   const promise = new Promise((resolve, reject) => {\n//     if (state === 'fulfilled') {\n//       setTimeout(() => resolve(delay), delay);\n//     } else if (state === 'rejected') {\n//       setTimeout(() => reject(delay), delay);\n//     }\n//   });\n\n//   promise\n//     .then(delay => {\n//       iziToast.success({\n//         message: `✅ Fulfilled promise in ${delay}ms`,\n//         position: 'bottomCenter',\n//       });\n//     })\n//     .catch(delay => {\n//       iziToast.error({\n//         message: `❌Rejected promise in ${delay}ms`,\n//         position: 'bottomCenter',\n//       });\n//     });\n// }\n\n// form.addEventListener('submit', createPromise);\n"],"names":["form","event","time","state","promise","resolve","reject","value","successfulMessage","error","errorMessage","delay","iziToast"],"mappings":"oGAEA,MAAMA,EAAO,SAAS,cAAc,OAAO,EAE3CA,EAAK,iBAAiB,SAAUC,GAAS,CACvCA,EAAM,eAAc,EAEpB,MAAMC,EAAOF,EAAK,SAAS,MAAM,MAC3BG,EAAQH,EAAK,SAAS,MAAM,MAgBlC,SAASI,GAAU,CACjB,OAAO,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtC,WAAW,IAAM,CACXH,IAAU,aACZE,IAEFC,GACD,EAAEJ,CAAI,CACb,CAAK,CACF,CAEDE,EAAS,EACN,KAAKG,GAASC,EAAkBN,CAAI,CAAC,EACrC,MAAMO,GAASC,EAAaR,CAAI,CAAC,CACtC,CAAC,EAED,SAASQ,EAAaC,EAAO,CAC3BC,EAAS,KAAK,CACZ,KAAM,aACN,gBAAiB,UACjB,QAAS,uBAAuBD,CAAK,MACrC,aAAc,UACd,YAAa,OACb,SAAU,YACV,MAAO,EACX,CAAG,CACH,CAEA,SAASH,EAAkBG,EAAO,CAChCC,EAAS,KAAK,CACZ,KAAM,aACN,gBAAiB,UACjB,QAAS,wBAAwBD,CAAK,MACtC,aAAc,UACd,YAAa,OACb,SAAU,YACV,MAAO,EACX,CAAG,CACH"}